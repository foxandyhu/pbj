<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:jdbc="http://www.springframework.org/schema/jdbc"
     xmlns:context="http://www.springframework.org/schema/context"
     xmlns:task="http://www.springframework.org/schema/task"
     xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
     http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd">

	<!-- 数据库连接 begin -->
	<bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="driver" value="com.mysql.jdbc.Driver"/>
		<property name="driverUrl" value="jdbc:mysql://127.0.0.1:3306/paobuji?autoReconnect=true"/>
		<property name="user" value="root"/>
		<property name="password" value="root"/>
		<property name="maximumConnectionCount" value="100"/>
		<property name="minimumConnectionCount" value="10"/>
		<property name="houseKeepingTestSql" value="select now()"/>
	</bean>
 	<!-- 数据库连接 end -->

   	<!-- 事务 begin -->
   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<context:component-scan base-package="com.lw.iot.pbj">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<tx:annotation-driven transaction-manager="transactionManager"/>	
	 <!--事务 end -->
		
	<!-- Session工厂 beign -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
 		<property name="configLocation" value="classpath:SqlMapConfig.xml"/>
	</bean>
     <!-- Session 工厂 end -->
    
	<!-- 系统日志处理 begin -->
	<bean id="logHandler" class="com.lw.iot.pbj.logs.LogsHandler"/>
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<aop:config>
		<aop:pointcut id="logPointcut" expression="execution(* com.lw.iot.pbj..service..*.add*(..)) or 
												   execution(* com.lw.iot.pbj..service..*.del*(..)) or 
												   execution(* com.lw.iot.pbj..service..*.edit*(..)) or 
												   execution(* com.lw.iot.pbj..service..*.update*(..)) or 
												   execution(* com.lw.iot.pbj..service..*.save*(..))"/>
		<aop:aspect id="logAfterReturning"  ref="logHandler" order="2">
			<aop:after-returning pointcut-ref="logPointcut" method="addLog"/>
		</aop:aspect>
	</aop:config>

	<bean id="logsExceptionHandler" class="com.lw.iot.pbj.logs.LogsExceptionHandler"/>		
	<aop:config>
		<aop:pointcut id="logPointcut" expression="execution(* com.lw.iot.pbj..service..*.add*(..)) or 
												   execution(* com.lw.iot.pbj..service..*.del*(..)) or 
												   execution(* com.lw.iot.pbj..service..*.edit*(..)) or 
												   execution(* com.lw.iot.pbj..service..*.update*(..)) or 
												   execution(* com.lw.iot.pbj..service..*.save*(..))"/>
		<aop:aspect id="logAfterThrowing"  ref="logsExceptionHandler" order="3">
			<aop:after-throwing pointcut-ref="logPointcut" method="doAfterThrowing"/>
		</aop:aspect>
	</aop:config>
	<!-- 系统日志处理 end -->	
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.lw.iot.pbj.**.persistence"/>
	</bean>
		
	<!-- 日志处理的线程池 begin-->
	<bean id="logTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" destroy-method="destroy">
		<property name="corePoolSize" value="1"/>
		<property name="keepAliveSeconds" value="200"/>
		<property name="maxPoolSize" value="2"/>
		<property name="queueCapacity" value="30"/>
	</bean>
	<!-- 日志处理的线程池 end -->
	
	<!-- 工作任务线程池 begin-->
	<bean id="workTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" destroy-method="destroy">
		<property name="corePoolSize" value="1"/>
		<property name="keepAliveSeconds" value="200"/>
		<property name="maxPoolSize" value="20"/>
		<property name="queueCapacity" value="100"/>
	</bean>
	<!-- 工作任务线程池 end-->
	
	<!-- 定时器开关 begin -->
	<task:scheduler id="scheduler" pool-size="5"/>
	<!-- 定时器开关 end -->
	
</beans>
